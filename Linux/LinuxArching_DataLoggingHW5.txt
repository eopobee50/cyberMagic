Ernest Pobee - HW 5
Week 5 Homework Submission File: Linux Archiving and Logging Data
 
Step 1: Create, Extract, Compress, and Manage tar Backup Archives
Command to extract the TarDocs.tar archive to the current directory:
sudo tar xvvf TarDocs.tar
ls -l
2. Command to create the Javaless_Doc.tar archive from the TarDocs/ directory, while excluding the TarDocs/Documents/Java directory:

3. Command to ensure Java/ is not in the new Javaless_Docs.tar archive:
tar cvvf Javaless_Docs.tar --exclude="TarDocs/Documents/Java" TarDocs/
 
Bonus
Command to create an incremental archive called logs_backup_tar.gz with only changed files to snapshot.file for the /var/log directory:
sudo tar czvvf logs_backup.tar.gz --listed-incremental=logs_backupfile.snar --level=0 /var/log

Critical Analysis Question
Why wouldn't you use the options -x and -c at the same time with tar?
 -X is used to extract contents from an archived file and -c is used to create an archive file.  Using both commands will cancel out what you intend to do.
================================================
Step 2: Create, Manage, and Automate Cron Jobs
Cron job for backing up the /var/log/auth.log file:
06 * * 3 tar czvvf /home/sysadmin/Projects/auth_backup.tgz /var/log/auth.log
=================================
Step 3: Write Basic Bash Scripts
Brace expansion command to create the four subdirectories:
mkdir -p /backup/{freemen,diskuse,openlist,ffreedisk}

 
2. Paste your system.sh script edits below:
#!/bin/bash
#show free memory
free -m > ~/backups/freemem/free_mem.txt

#show disk usage
free -m > ~/backups/diskuse/disk_usage.txt

#show open file list
free -m > ~/backups/freedisk/free_disk.txt

4. Command to make the system.sh script executable:
chmod +x system.sh

 Optional
Commands to test the script and confirm its execution:
./system.sh
 
Bonus
Command to copy system to system-wide cron directory:
sudo cp system.sh /etc/cron.weekly/

 ====================================

Step 4. Manage Log File Sizes
Run sudo nano /etc/logrotate.conf to edit the logrotate configuration file.
 Configure a log rotation scheme that backs up authentication messages to the /var/log/auth.log.
Add your config file edits below:
/var/log/auth.log {
   weekly
   rotate 7
   notifempty
   delaycompress
   missingok
}
========================
Bonus: Check for Policy and File Violations
Command to verify auditd is active:
systemctl status auditd
     2. Command to set number of retained logs and maximum log file size:
Add the edits made to the configuration file below:
open /etc/audit/auditd.conf and eg make changes to max_log_file =35

3. Command using auditd to set rules for /etc/shadow, /etc/passwd and /var/log/auth.log:
sudo nano /etc/audit/rules.d/audit.rules
Add the edits made to the rules file below:
open /etc/audit/rules.d/audit.rules and eg make changes to :
#Creating rules Policy and File violation
-w /etc/passwd -p wra -k hashpass_audit
-w /etc/passwd -p wra -k userpass_audit
-w /var/log/auth.log -p wra -k authlog_audit

4. Command to restart auditd:
sudo systemctl restart auditd

5. Command to list all auditd rules: 
sudo auditctl -l
-w /etc/passwd -p wra -k hashpass_audit
-w /etc/passwd -p wra -k userpass_audit
-w /var/log/auth.log -p wra -k authlog_audit

6. Command to produce an audit report: 
sudo aureport -au

7. Create a user with sudo useradd attacker and produce an audit report that lists account modifications: 
sudo useradd attacker
sudo aureport -m

8. Command to use auditd to watch /var/log/cron: 
 sudo auditctl -w /var/log/cron

9. Command to verify auditd rules:
sudo auditctl -l
 
Bonus (Research Activity): Perform Various Log Filtering Techniques
Command to return journalctl messages with priorities from emergency to error:
sudo journalctl -p 0..3   -verify
Command to check the disk usage of the system journal unit since the most recent boot:
 journalctl --disk-usage
Command to remove all archived journal files except the most recent two:
Journalctl --vacuum-files=
Command to filter all log messages with priority levels between zero and two, and save output to /home/sysadmin/Priority_High.txt:
sudo journalctl -p 0..2 >  /home/sysadmin/Priority_High.txt
Command to automate the last command in a daily cronjob. Add the edits made to the crontab file below:
 [Your solution cron edits here]
sudo journalctl -p 0..2 >  /home/sysadmin/Priority_High.txt/cron.daily 
 
